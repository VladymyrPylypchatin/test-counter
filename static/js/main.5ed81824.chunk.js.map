{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","components/counter/counter.js","components/App.js","index.js"],"names":["increment","createAction","decrement","counterReducer","createReducer","value","state","payload","store","configureStore","reducer","devTools","process","Counter","dispatch","useDispatch","useSelector","counter","className","onClick","setTimeout","App","ReactDOM","render","document","getElementById"],"mappings":"6NAEaA,EAAYC,YAAa,qBACzBC,EAAYD,YAAa,qBCSzBE,EAAiBC,YAJT,CACnBC,MAAQ,IAGiC,mBACxCL,GAAY,SAACM,EAAD,OAAUC,EAAV,EAAUA,QAAV,MAAyB,CACpCF,MAAQC,EAAMD,MAAQE,MAFiB,cAKxCL,GAAY,SAACI,EAAD,OAAUC,EAAV,EAAUA,QAAV,MAAyB,CACpCF,MAAQC,EAAMD,MAAQE,MANiB,ICL5BC,EAJDC,YAAe,CAC3BC,QAASP,EACTQ,UAAUC,I,MCgCGC,MA9Bf,WACI,IAAMC,EAAWC,cACXV,EAAQW,aAAY,SAAAV,GAAK,OAAIA,EAAMW,QAAQZ,SAgBjD,OACI,sBAAKa,UAAU,UAAf,UACI,mBAAGA,UAAU,gBAAb,SAA8Bb,GAAgB,IAC9C,qBAAIa,UAAU,eAAd,UACG,oBAAIA,UAAU,eAAd,SAA6B,wBAAQA,UAAU,cAAcC,QAlBhD,WACxBL,EAASd,EAAU,KAiBqB,yBAC7B,oBAAIkB,UAAU,eAAd,SAA6B,wBAAQA,UAAU,cAAcC,QAfhD,WACnBL,EAASZ,EAAU,KAcgB,yBAC7B,oBAAIgB,UAAU,eAAd,SAA6B,wBAAQA,UAAU,cAAcC,QAZ3C,WACzBC,YAAW,WACRN,EAASd,EAAU,MACnB,MASiC,sC,MCnB7BqB,MARf,WACE,OACE,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,OCANI,IAASC,OACP,cAAC,IAAD,CAAUf,MAAOA,EAAjB,SACG,cAAC,EAAD,MAEHgB,SAASC,eAAe,W","file":"static/js/main.5ed81824.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const increment = createAction('COUNTER_INCREMENT');\r\nexport const decrement = createAction('COUNTER_DECREMENT');\r\n\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\nincrement,\r\ndecrement,\r\n \r\n} from './actions';\r\n\r\nconst initialState = {\r\n  value : 0\r\n};\r\n\r\nexport const counterReducer = createReducer(initialState, {\r\n  [increment]: (state, { payload }) => ({\r\n    value : state.value + payload\r\n    \r\n  }),\r\n  [decrement]: (state, { payload }) => ({\r\n    value : state.value - payload\r\n    \r\n  }),\r\n  \r\n});\r\n","import { counterReducer } from './reducer';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst store = configureStore({\r\n  reducer: counterReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\nexport default store;\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { decrement, increment } from '../../redux/actions'\r\n\r\n\r\nimport \"./counter.scss\"\r\n\r\nfunction Counter() {\r\n    const dispatch = useDispatch()\r\n    const value = useSelector(state => state.counter.value)\r\n\r\n    const handleIncrement = () => {\r\n    dispatch(increment(1))\r\n    }\r\n    \r\n    const handleDecrement = () => {\r\n         dispatch(decrement(1))\r\n    }\r\n\r\n    const handleAsyncIncrement = () => {\r\n        setTimeout(() => {\r\n           dispatch(increment(1)) \r\n        }, 1000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"counter\">\r\n            <p className=\"counter-value\">{value ? value : 0}</p>\r\n            <ul className=\"counter-list\">\r\n               <li className=\"counter-item\"><button className=\"counter-btn\" onClick={handleIncrement}>increment</button></li>\r\n               <li className=\"counter-item\"><button className=\"counter-btn\" onClick={handleDecrement}>decrement</button></li>\r\n               <li className=\"counter-item\"><button className=\"counter-btn\" onClick={handleAsyncIncrement}>async increment</button></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter\r\n","import Counter from './counter/counter'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store  from './redux/store';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <Provider store={store}>\n     <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}